// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.3
// source: proto/haru.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RegisterTimestamp int64 `protobuf:"varint,2,opt,name=register_timestamp,json=registerTimestamp,proto3" json:"register_timestamp,omitempty"`
}

func (x *AccountRequest) Reset() {
	*x = AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRequest) ProtoMessage() {}

func (x *AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRequest.ProtoReflect.Descriptor instead.
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{0}
}

func (x *AccountRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountRequest) GetRegisterTimestamp() int64 {
	if x != nil {
		return x.RegisterTimestamp
	}
	return 0
}

type AccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RegisterTimestamp int64 `protobuf:"varint,2,opt,name=register_timestamp,json=registerTimestamp,proto3" json:"register_timestamp,omitempty"`
}

func (x *AccountReply) Reset() {
	*x = AccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReply) ProtoMessage() {}

func (x *AccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReply.ProtoReflect.Descriptor instead.
func (*AccountReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{1}
}

func (x *AccountReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountReply) GetRegisterTimestamp() int64 {
	if x != nil {
		return x.RegisterTimestamp
	}
	return 0
}

type ProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Likes    []string `protobuf:"bytes,3,rep,name=likes,proto3" json:"likes,omitempty"`
}

func (x *ProfileRequest) Reset() {
	*x = ProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRequest) ProtoMessage() {}

func (x *ProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRequest.ProtoReflect.Descriptor instead.
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{2}
}

func (x *ProfileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProfileRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ProfileRequest) GetLikes() []string {
	if x != nil {
		return x.Likes
	}
	return nil
}

type PlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input     string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Language  string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	PlaceId   string `protobuf:"bytes,3,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	IsVisit   bool   `protobuf:"varint,4,opt,name=is_visit,json=isVisit,proto3" json:"is_visit,omitempty"`
	IsLike    bool   `protobuf:"varint,5,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
	Location  string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Radius    uint64 `protobuf:"varint,7,opt,name=radius,proto3" json:"radius,omitempty"`
	Keyword   string `protobuf:"bytes,8,opt,name=keyword,proto3" json:"keyword,omitempty"`
	PageToken string `protobuf:"bytes,9,opt,name=pageToken,proto3" json:"pageToken,omitempty"`
	OpenNow   bool   `protobuf:"varint,10,opt,name=OpenNow,proto3" json:"OpenNow,omitempty"`
}

func (x *PlaceRequest) Reset() {
	*x = PlaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceRequest) ProtoMessage() {}

func (x *PlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceRequest.ProtoReflect.Descriptor instead.
func (*PlaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{3}
}

func (x *PlaceRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *PlaceRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PlaceRequest) GetPlaceId() string {
	if x != nil {
		return x.PlaceId
	}
	return ""
}

func (x *PlaceRequest) GetIsVisit() bool {
	if x != nil {
		return x.IsVisit
	}
	return false
}

func (x *PlaceRequest) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *PlaceRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PlaceRequest) GetRadius() uint64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *PlaceRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *PlaceRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PlaceRequest) GetOpenNow() bool {
	if x != nil {
		return x.OpenNow
	}
	return false
}

type ProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Likes    []string `protobuf:"bytes,3,rep,name=likes,proto3" json:"likes,omitempty"`
}

func (x *ProfileReply) Reset() {
	*x = ProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReply) ProtoMessage() {}

func (x *ProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReply.ProtoReflect.Descriptor instead.
func (*ProfileReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{4}
}

func (x *ProfileReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProfileReply) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ProfileReply) GetLikes() []string {
	if x != nil {
		return x.Likes
	}
	return nil
}

type PointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Point int64 `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *PointRequest) Reset() {
	*x = PointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointRequest) ProtoMessage() {}

func (x *PointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointRequest.ProtoReflect.Descriptor instead.
func (*PointRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{5}
}

func (x *PointRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PointRequest) GetPoint() int64 {
	if x != nil {
		return x.Point
	}
	return 0
}

// 서버 단독 Place 정보들 모델로 정의 포인트, 방문정보등
type PointReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Point int64 `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PointReply) Reset() {
	*x = PointReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointReply) ProtoMessage() {}

func (x *PointReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointReply.ProtoReflect.Descriptor instead.
func (*PointReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{6}
}

func (x *PointReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PointReply) GetPoint() int64 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *PointReply) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PlaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressComponents        []*AddressComponent `protobuf:"bytes,1,rep,name=address_components,json=addressComponents,proto3" json:"address_components,omitempty"`
	FormattedAddress         string              `protobuf:"bytes,2,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	AdrAddress               string              `protobuf:"bytes,3,opt,name=adr_address,json=adrAddress,proto3" json:"adr_address,omitempty"`
	FormattedPhoneNumber     string              `protobuf:"bytes,4,opt,name=formatted_phone_number,json=formattedPhoneNumber,proto3" json:"formatted_phone_number,omitempty"`
	InternationalPhoneNumber string              `protobuf:"bytes,5,opt,name=international_phone_number,json=internationalPhoneNumber,proto3" json:"international_phone_number,omitempty"`
	Geometry                 *AddressGeometry    `protobuf:"bytes,6,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Name                     string              `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Icon                     string              `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	PlaceId                  string              `protobuf:"bytes,9,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	Rating                   float32             `protobuf:"fixed32,10,opt,name=rating,proto3" json:"rating,omitempty"`
	UserRatingsTotal         int64               `protobuf:"varint,11,opt,name=user_ratings_total,json=userRatingsTotal,proto3" json:"user_ratings_total,omitempty"`
	Types                    []string            `protobuf:"bytes,12,rep,name=Types,proto3" json:"Types,omitempty"`
	OpeningHours             *OpeningHours       `protobuf:"bytes,13,opt,name=opening_hours,json=openingHours,proto3" json:"opening_hours,omitempty"`
	Photos                   []*Photo            `protobuf:"bytes,14,rep,name=photos,proto3" json:"photos,omitempty"`
	PriceLevel               int64               `protobuf:"varint,15,opt,name=price_level,json=priceLevel,proto3" json:"price_level,omitempty"`
	Vicinity                 string              `protobuf:"bytes,16,opt,name=vicinity,proto3" json:"vicinity,omitempty"`
	PermanentlyClosed        bool                `protobuf:"varint,17,opt,name=permanently_closed,json=permanentlyClosed,proto3" json:"permanently_closed,omitempty"`
	BusinessStatus           string              `protobuf:"bytes,18,opt,name=business_status,json=businessStatus,proto3" json:"business_status,omitempty"`
	Reviews                  []*PlaceReview      `protobuf:"bytes,19,rep,name=reviews,proto3" json:"reviews,omitempty"`
	UtcOffset                int64               `protobuf:"varint,20,opt,name=utc_offset,json=utcOffset,proto3" json:"utc_offset,omitempty"`
	Website                  string              `protobuf:"bytes,21,opt,name=website,proto3" json:"website,omitempty"`
	Url                      string              `protobuf:"bytes,22,opt,name=url,proto3" json:"url,omitempty"`
	HtmlAttributions         []string            `protobuf:"bytes,23,rep,name=html_attributions,json=htmlAttributions,proto3" json:"html_attributions,omitempty"`
}

func (x *PlaceReply) Reset() {
	*x = PlaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceReply) ProtoMessage() {}

func (x *PlaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceReply.ProtoReflect.Descriptor instead.
func (*PlaceReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{7}
}

func (x *PlaceReply) GetAddressComponents() []*AddressComponent {
	if x != nil {
		return x.AddressComponents
	}
	return nil
}

func (x *PlaceReply) GetFormattedAddress() string {
	if x != nil {
		return x.FormattedAddress
	}
	return ""
}

func (x *PlaceReply) GetAdrAddress() string {
	if x != nil {
		return x.AdrAddress
	}
	return ""
}

func (x *PlaceReply) GetFormattedPhoneNumber() string {
	if x != nil {
		return x.FormattedPhoneNumber
	}
	return ""
}

func (x *PlaceReply) GetInternationalPhoneNumber() string {
	if x != nil {
		return x.InternationalPhoneNumber
	}
	return ""
}

func (x *PlaceReply) GetGeometry() *AddressGeometry {
	if x != nil {
		return x.Geometry
	}
	return nil
}

func (x *PlaceReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlaceReply) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PlaceReply) GetPlaceId() string {
	if x != nil {
		return x.PlaceId
	}
	return ""
}

func (x *PlaceReply) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *PlaceReply) GetUserRatingsTotal() int64 {
	if x != nil {
		return x.UserRatingsTotal
	}
	return 0
}

func (x *PlaceReply) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *PlaceReply) GetOpeningHours() *OpeningHours {
	if x != nil {
		return x.OpeningHours
	}
	return nil
}

func (x *PlaceReply) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *PlaceReply) GetPriceLevel() int64 {
	if x != nil {
		return x.PriceLevel
	}
	return 0
}

func (x *PlaceReply) GetVicinity() string {
	if x != nil {
		return x.Vicinity
	}
	return ""
}

func (x *PlaceReply) GetPermanentlyClosed() bool {
	if x != nil {
		return x.PermanentlyClosed
	}
	return false
}

func (x *PlaceReply) GetBusinessStatus() string {
	if x != nil {
		return x.BusinessStatus
	}
	return ""
}

func (x *PlaceReply) GetReviews() []*PlaceReview {
	if x != nil {
		return x.Reviews
	}
	return nil
}

func (x *PlaceReply) GetUtcOffset() int64 {
	if x != nil {
		return x.UtcOffset
	}
	return 0
}

func (x *PlaceReply) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *PlaceReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PlaceReply) GetHtmlAttributions() []string {
	if x != nil {
		return x.HtmlAttributions
	}
	return nil
}

type AddressComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongName  string   `protobuf:"bytes,1,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName string   `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Types     []string `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *AddressComponent) Reset() {
	*x = AddressComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressComponent) ProtoMessage() {}

func (x *AddressComponent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressComponent.ProtoReflect.Descriptor instead.
func (*AddressComponent) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{8}
}

func (x *AddressComponent) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *AddressComponent) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *AddressComponent) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type AddressGeometry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location     *LatLng       `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	LocationType string        `protobuf:"bytes,2,opt,name=location_type,json=locationType,proto3" json:"location_type,omitempty"`
	Bounds       *LatLngBounds `protobuf:"bytes,3,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Viewport     *LatLngBounds `protobuf:"bytes,4,opt,name=viewport,proto3" json:"viewport,omitempty"`
	Types        []string      `protobuf:"bytes,5,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *AddressGeometry) Reset() {
	*x = AddressGeometry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressGeometry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressGeometry) ProtoMessage() {}

func (x *AddressGeometry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressGeometry.ProtoReflect.Descriptor instead.
func (*AddressGeometry) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{9}
}

func (x *AddressGeometry) GetLocation() *LatLng {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *AddressGeometry) GetLocationType() string {
	if x != nil {
		return x.LocationType
	}
	return ""
}

func (x *AddressGeometry) GetBounds() *LatLngBounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *AddressGeometry) GetViewport() *LatLngBounds {
	if x != nil {
		return x.Viewport
	}
	return nil
}

func (x *AddressGeometry) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type LatLng struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float32 `protobuf:"fixed32,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *LatLng) Reset() {
	*x = LatLng{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatLng) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatLng) ProtoMessage() {}

func (x *LatLng) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatLng.ProtoReflect.Descriptor instead.
func (*LatLng) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{10}
}

func (x *LatLng) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *LatLng) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type LatLngBounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Northeast *LatLng `protobuf:"bytes,1,opt,name=northeast,proto3" json:"northeast,omitempty"`
	Southwest *LatLng `protobuf:"bytes,2,opt,name=southwest,proto3" json:"southwest,omitempty"`
}

func (x *LatLngBounds) Reset() {
	*x = LatLngBounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatLngBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatLngBounds) ProtoMessage() {}

func (x *LatLngBounds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatLngBounds.ProtoReflect.Descriptor instead.
func (*LatLngBounds) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{11}
}

func (x *LatLngBounds) GetNortheast() *LatLng {
	if x != nil {
		return x.Northeast
	}
	return nil
}

func (x *LatLngBounds) GetSouthwest() *LatLng {
	if x != nil {
		return x.Southwest
	}
	return nil
}

type OpeningHoursOpenClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day  int64  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *OpeningHoursOpenClose) Reset() {
	*x = OpeningHoursOpenClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningHoursOpenClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningHoursOpenClose) ProtoMessage() {}

func (x *OpeningHoursOpenClose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningHoursOpenClose.ProtoReflect.Descriptor instead.
func (*OpeningHoursOpenClose) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{12}
}

func (x *OpeningHoursOpenClose) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *OpeningHoursOpenClose) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoReference   string   `protobuf:"bytes,1,opt,name=photo_reference,json=photoReference,proto3" json:"photo_reference,omitempty"`
	Height           int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width            int64    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	HtmlAttributions []string `protobuf:"bytes,4,rep,name=html_attributions,json=htmlAttributions,proto3" json:"html_attributions,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{13}
}

func (x *Photo) GetPhotoReference() string {
	if x != nil {
		return x.PhotoReference
	}
	return ""
}

func (x *Photo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Photo) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Photo) GetHtmlAttributions() []string {
	if x != nil {
		return x.HtmlAttributions
	}
	return nil
}

type PlaceReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aspects         []*PlaceReviewAspect `protobuf:"bytes,1,rep,name=aspects,proto3" json:"aspects,omitempty"`
	AuthorName      string               `protobuf:"bytes,2,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	AuthorUrl       string               `protobuf:"bytes,3,opt,name=author_url,json=authorUrl,proto3" json:"author_url,omitempty"`
	ProfilePhotoUrl string               `protobuf:"bytes,4,opt,name=profile_photo_url,json=profilePhotoUrl,proto3" json:"profile_photo_url,omitempty"`
	Language        string               `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Rating          int64                `protobuf:"varint,6,opt,name=rating,proto3" json:"rating,omitempty"`
	Text            string               `protobuf:"bytes,7,opt,name=text,proto3" json:"text,omitempty"`
	Time            int64                `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PlaceReview) Reset() {
	*x = PlaceReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceReview) ProtoMessage() {}

func (x *PlaceReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceReview.ProtoReflect.Descriptor instead.
func (*PlaceReview) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{14}
}

func (x *PlaceReview) GetAspects() []*PlaceReviewAspect {
	if x != nil {
		return x.Aspects
	}
	return nil
}

func (x *PlaceReview) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *PlaceReview) GetAuthorUrl() string {
	if x != nil {
		return x.AuthorUrl
	}
	return ""
}

func (x *PlaceReview) GetProfilePhotoUrl() string {
	if x != nil {
		return x.ProfilePhotoUrl
	}
	return ""
}

func (x *PlaceReview) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PlaceReview) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *PlaceReview) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PlaceReview) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type PlaceReviewAspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating int64  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PlaceReviewAspect) Reset() {
	*x = PlaceReviewAspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceReviewAspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceReviewAspect) ProtoMessage() {}

func (x *PlaceReviewAspect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceReviewAspect.ProtoReflect.Descriptor instead.
func (*PlaceReviewAspect) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{15}
}

func (x *PlaceReviewAspect) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *PlaceReviewAspect) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OpeningHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenNow           bool                               `protobuf:"varint,1,opt,name=open_now,json=openNow,proto3" json:"open_now,omitempty"`
	Periods           []*OpeningHours_OpeningHoursPeriod `protobuf:"bytes,2,rep,name=periods,proto3" json:"periods,omitempty"`
	WeekdayText       []string                           `protobuf:"bytes,3,rep,name=weekday_text,json=weekdayText,proto3" json:"weekday_text,omitempty"`
	PermanentlyClosed bool                               `protobuf:"varint,4,opt,name=permanently_closed,json=permanentlyClosed,proto3" json:"permanently_closed,omitempty"`
}

func (x *OpeningHours) Reset() {
	*x = OpeningHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningHours) ProtoMessage() {}

func (x *OpeningHours) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningHours.ProtoReflect.Descriptor instead.
func (*OpeningHours) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{16}
}

func (x *OpeningHours) GetOpenNow() bool {
	if x != nil {
		return x.OpenNow
	}
	return false
}

func (x *OpeningHours) GetPeriods() []*OpeningHours_OpeningHoursPeriod {
	if x != nil {
		return x.Periods
	}
	return nil
}

func (x *OpeningHours) GetWeekdayText() []string {
	if x != nil {
		return x.WeekdayText
	}
	return nil
}

func (x *OpeningHours) GetPermanentlyClosed() bool {
	if x != nil {
		return x.PermanentlyClosed
	}
	return false
}

type PlaceProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceId      string                            `protobuf:"bytes,1,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	PopularTimes []*PlaceProfileReply_Populartimes `protobuf:"bytes,2,rep,name=popular_times,json=popularTimes,proto3" json:"popular_times,omitempty"`
	Likes        int64                             `protobuf:"varint,3,opt,name=likes,proto3" json:"likes,omitempty"`
}

func (x *PlaceProfileReply) Reset() {
	*x = PlaceProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceProfileReply) ProtoMessage() {}

func (x *PlaceProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceProfileReply.ProtoReflect.Descriptor instead.
func (*PlaceProfileReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{17}
}

func (x *PlaceProfileReply) GetPlaceId() string {
	if x != nil {
		return x.PlaceId
	}
	return ""
}

func (x *PlaceProfileReply) GetPopularTimes() []*PlaceProfileReply_Populartimes {
	if x != nil {
		return x.PopularTimes
	}
	return nil
}

func (x *PlaceProfileReply) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

type PlaceReplyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceReplyList []*PlaceReply `protobuf:"bytes,1,rep,name=place_reply_list,json=placeReplyList,proto3" json:"place_reply_list,omitempty"`
}

func (x *PlaceReplyList) Reset() {
	*x = PlaceReplyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceReplyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceReplyList) ProtoMessage() {}

func (x *PlaceReplyList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceReplyList.ProtoReflect.Descriptor instead.
func (*PlaceReplyList) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{18}
}

func (x *PlaceReplyList) GetPlaceReplyList() []*PlaceReply {
	if x != nil {
		return x.PlaceReplyList
	}
	return nil
}

type OpeningHours_OpeningHoursPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open  *OpeningHours_OpeningHoursOpenClose `protobuf:"bytes,1,opt,name=open,proto3" json:"open,omitempty"`
	Close *OpeningHours_OpeningHoursOpenClose `protobuf:"bytes,2,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *OpeningHours_OpeningHoursPeriod) Reset() {
	*x = OpeningHours_OpeningHoursPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningHours_OpeningHoursPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningHours_OpeningHoursPeriod) ProtoMessage() {}

func (x *OpeningHours_OpeningHoursPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningHours_OpeningHoursPeriod.ProtoReflect.Descriptor instead.
func (*OpeningHours_OpeningHoursPeriod) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{16, 0}
}

func (x *OpeningHours_OpeningHoursPeriod) GetOpen() *OpeningHours_OpeningHoursOpenClose {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *OpeningHours_OpeningHoursPeriod) GetClose() *OpeningHours_OpeningHoursOpenClose {
	if x != nil {
		return x.Close
	}
	return nil
}

type OpeningHours_OpeningHoursOpenClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day  int64  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *OpeningHours_OpeningHoursOpenClose) Reset() {
	*x = OpeningHours_OpeningHoursOpenClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningHours_OpeningHoursOpenClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningHours_OpeningHoursOpenClose) ProtoMessage() {}

func (x *OpeningHours_OpeningHoursOpenClose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningHours_OpeningHoursOpenClose.ProtoReflect.Descriptor instead.
func (*OpeningHours_OpeningHoursOpenClose) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{16, 1}
}

func (x *OpeningHours_OpeningHoursOpenClose) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *OpeningHours_OpeningHoursOpenClose) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type PlaceProfileReply_Populartimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weekday int64 `protobuf:"varint,1,opt,name=weekday,proto3" json:"weekday,omitempty"`
	Time    int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Count   int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PlaceProfileReply_Populartimes) Reset() {
	*x = PlaceProfileReply_Populartimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceProfileReply_Populartimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceProfileReply_Populartimes) ProtoMessage() {}

func (x *PlaceProfileReply_Populartimes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceProfileReply_Populartimes.ProtoReflect.Descriptor instead.
func (*PlaceProfileReply_Populartimes) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{17, 0}
}

func (x *PlaceProfileReply_Populartimes) GetWeekday() int64 {
	if x != nil {
		return x.Weekday
	}
	return 0
}

func (x *PlaceProfileReply_Populartimes) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PlaceProfileReply_Populartimes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_proto_haru_proto protoreflect.FileDescriptor

var file_proto_haru_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x68, 0x61, 0x72, 0x75, 0x22, 0x4f, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4d, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x52, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x95, 0x02, 0x0a,
	0x0c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70,
	0x65, 0x6e, 0x4e, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4f, 0x70, 0x65,
	0x6e, 0x4e, 0x6f, 0x77, 0x22, 0x50, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x0c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x0a,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xff, 0x06, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x64, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x47,
	0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x37, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x61, 0x72, 0x75,
	0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x69, 0x63, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x63, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x70,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65,
	0x6e, 0x74, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x74, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x74, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x68,
	0x74, 0x6d, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x68, 0x74, 0x6d, 0x6c, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x64, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xd2,
	0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x12, 0x28, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4c, 0x61, 0x74, 0x4c,
	0x6e, 0x67, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x0a,
	0x08, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e,
	0x67, 0x22, 0x66, 0x0a, 0x0c, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x2a, 0x0a, 0x09, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x65, 0x61, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4c, 0x61, 0x74, 0x4c,
	0x6e, 0x67, 0x52, 0x09, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x65, 0x61, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x77, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x77, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x4f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x74, 0x6d,
	0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x68, 0x74, 0x6d, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x3f, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x77, 0x12, 0x3f,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x1a, 0x92, 0x01, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x1a, 0x3d, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x52, 0x0c, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x50, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x10, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x9e, 0x04, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x68, 0x61, 0x72, 0x75, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x14, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14,
	0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x68, 0x61, 0x72,
	0x75, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x33,
	0x0a, 0x09, 0x49, 0x6e, 0x63, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x68, 0x61,
	0x72, 0x75, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12,
	0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x68,
	0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12,
	0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x6a, 0x69, 0x6e, 0x2d, 0x6b,
	0x72, 0x2f, 0x68, 0x61, 0x72, 0x75, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_haru_proto_rawDescOnce sync.Once
	file_proto_haru_proto_rawDescData = file_proto_haru_proto_rawDesc
)

func file_proto_haru_proto_rawDescGZIP() []byte {
	file_proto_haru_proto_rawDescOnce.Do(func() {
		file_proto_haru_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_haru_proto_rawDescData)
	})
	return file_proto_haru_proto_rawDescData
}

var file_proto_haru_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_haru_proto_goTypes = []interface{}{
	(*AccountRequest)(nil),                     // 0: haru.AccountRequest
	(*AccountReply)(nil),                       // 1: haru.AccountReply
	(*ProfileRequest)(nil),                     // 2: haru.ProfileRequest
	(*PlaceRequest)(nil),                       // 3: haru.PlaceRequest
	(*ProfileReply)(nil),                       // 4: haru.ProfileReply
	(*PointRequest)(nil),                       // 5: haru.PointRequest
	(*PointReply)(nil),                         // 6: haru.PointReply
	(*PlaceReply)(nil),                         // 7: haru.PlaceReply
	(*AddressComponent)(nil),                   // 8: haru.AddressComponent
	(*AddressGeometry)(nil),                    // 9: haru.AddressGeometry
	(*LatLng)(nil),                             // 10: haru.LatLng
	(*LatLngBounds)(nil),                       // 11: haru.LatLngBounds
	(*OpeningHoursOpenClose)(nil),              // 12: haru.OpeningHoursOpenClose
	(*Photo)(nil),                              // 13: haru.Photo
	(*PlaceReview)(nil),                        // 14: haru.PlaceReview
	(*PlaceReviewAspect)(nil),                  // 15: haru.PlaceReviewAspect
	(*OpeningHours)(nil),                       // 16: haru.OpeningHours
	(*PlaceProfileReply)(nil),                  // 17: haru.PlaceProfileReply
	(*PlaceReplyList)(nil),                     // 18: haru.PlaceReplyList
	(*OpeningHours_OpeningHoursPeriod)(nil),    // 19: haru.OpeningHours.OpeningHoursPeriod
	(*OpeningHours_OpeningHoursOpenClose)(nil), // 20: haru.OpeningHours.OpeningHoursOpenClose
	(*PlaceProfileReply_Populartimes)(nil),     // 21: haru.PlaceProfileReply.Populartimes
}
var file_proto_haru_proto_depIdxs = []int32{
	8,  // 0: haru.PlaceReply.address_components:type_name -> haru.AddressComponent
	9,  // 1: haru.PlaceReply.geometry:type_name -> haru.AddressGeometry
	16, // 2: haru.PlaceReply.opening_hours:type_name -> haru.OpeningHours
	13, // 3: haru.PlaceReply.photos:type_name -> haru.Photo
	14, // 4: haru.PlaceReply.reviews:type_name -> haru.PlaceReview
	10, // 5: haru.AddressGeometry.location:type_name -> haru.LatLng
	11, // 6: haru.AddressGeometry.bounds:type_name -> haru.LatLngBounds
	11, // 7: haru.AddressGeometry.viewport:type_name -> haru.LatLngBounds
	10, // 8: haru.LatLngBounds.northeast:type_name -> haru.LatLng
	10, // 9: haru.LatLngBounds.southwest:type_name -> haru.LatLng
	15, // 10: haru.PlaceReview.aspects:type_name -> haru.PlaceReviewAspect
	19, // 11: haru.OpeningHours.periods:type_name -> haru.OpeningHours.OpeningHoursPeriod
	21, // 12: haru.PlaceProfileReply.popular_times:type_name -> haru.PlaceProfileReply.Populartimes
	7,  // 13: haru.PlaceReplyList.place_reply_list:type_name -> haru.PlaceReply
	20, // 14: haru.OpeningHours.OpeningHoursPeriod.open:type_name -> haru.OpeningHours.OpeningHoursOpenClose
	20, // 15: haru.OpeningHours.OpeningHoursPeriod.close:type_name -> haru.OpeningHours.OpeningHoursOpenClose
	0,  // 16: haru.version1.CreateAccount:input_type -> haru.AccountRequest
	2,  // 17: haru.version1.GetProfile:input_type -> haru.ProfileRequest
	2,  // 18: haru.version1.UpdateProfile:input_type -> haru.ProfileRequest
	5,  // 19: haru.version1.GetPoint:input_type -> haru.PointRequest
	5,  // 20: haru.version1.IncrPoint:input_type -> haru.PointRequest
	3,  // 21: haru.version1.GetPlaceByID:input_type -> haru.PlaceRequest
	3,  // 22: haru.version1.GetPlaceByInput:input_type -> haru.PlaceRequest
	3,  // 23: haru.version1.UpdatePlaceProfile:input_type -> haru.PlaceRequest
	3,  // 24: haru.version1.GetNearbySearch:input_type -> haru.PlaceRequest
	1,  // 25: haru.version1.CreateAccount:output_type -> haru.AccountReply
	4,  // 26: haru.version1.GetProfile:output_type -> haru.ProfileReply
	4,  // 27: haru.version1.UpdateProfile:output_type -> haru.ProfileReply
	6,  // 28: haru.version1.GetPoint:output_type -> haru.PointReply
	6,  // 29: haru.version1.IncrPoint:output_type -> haru.PointReply
	7,  // 30: haru.version1.GetPlaceByID:output_type -> haru.PlaceReply
	7,  // 31: haru.version1.GetPlaceByInput:output_type -> haru.PlaceReply
	17, // 32: haru.version1.UpdatePlaceProfile:output_type -> haru.PlaceProfileReply
	18, // 33: haru.version1.GetNearbySearch:output_type -> haru.PlaceReplyList
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_haru_proto_init() }
func file_proto_haru_proto_init() {
	if File_proto_haru_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_haru_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressGeometry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatLng); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatLngBounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningHoursOpenClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceReviewAspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceReplyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningHours_OpeningHoursPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningHours_OpeningHoursOpenClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceProfileReply_Populartimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_haru_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_haru_proto_goTypes,
		DependencyIndexes: file_proto_haru_proto_depIdxs,
		MessageInfos:      file_proto_haru_proto_msgTypes,
	}.Build()
	File_proto_haru_proto = out.File
	file_proto_haru_proto_rawDesc = nil
	file_proto_haru_proto_goTypes = nil
	file_proto_haru_proto_depIdxs = nil
}
