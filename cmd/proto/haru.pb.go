// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: proto/haru.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RegisterTimestamp int64 `protobuf:"varint,2,opt,name=register_timestamp,json=registerTimestamp,proto3" json:"register_timestamp,omitempty"`
}

func (x *AccountRequest) Reset() {
	*x = AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRequest) ProtoMessage() {}

func (x *AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRequest.ProtoReflect.Descriptor instead.
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{0}
}

func (x *AccountRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountRequest) GetRegisterTimestamp() int64 {
	if x != nil {
		return x.RegisterTimestamp
	}
	return 0
}

type AccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RegisterTimestamp int64 `protobuf:"varint,2,opt,name=register_timestamp,json=registerTimestamp,proto3" json:"register_timestamp,omitempty"`
}

func (x *AccountReply) Reset() {
	*x = AccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReply) ProtoMessage() {}

func (x *AccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReply.ProtoReflect.Descriptor instead.
func (*AccountReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{1}
}

func (x *AccountReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountReply) GetRegisterTimestamp() int64 {
	if x != nil {
		return x.RegisterTimestamp
	}
	return 0
}

type ProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *ProfileRequest) Reset() {
	*x = ProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRequest) ProtoMessage() {}

func (x *ProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRequest.ProtoReflect.Descriptor instead.
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{2}
}

func (x *ProfileRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type ProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *ProfileReply) Reset() {
	*x = ProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReply) ProtoMessage() {}

func (x *ProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReply.ProtoReflect.Descriptor instead.
func (*ProfileReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{3}
}

func (x *ProfileReply) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Join    *Join    `protobuf:"bytes,1,opt,name=join,proto3" json:"join,omitempty"`
	Profile *Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{4}
}

func (x *JoinRequest) GetJoin() *Join {
	if x != nil {
		return x.Join
	}
	return nil
}

func (x *JoinRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type JoinReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Join *Join `protobuf:"bytes,1,opt,name=join,proto3" json:"join,omitempty"`
}

func (x *JoinReply) Reset() {
	*x = JoinReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReply) ProtoMessage() {}

func (x *JoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReply.ProtoReflect.Descriptor instead.
func (*JoinReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{5}
}

func (x *JoinReply) GetJoin() *Join {
	if x != nil {
		return x.Join
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Age      int64   `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Sex      int64   `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Gross    int64   `protobuf:"varint,5,opt,name=gross,proto3" json:"gross,omitempty"`
	Years    int64   `protobuf:"varint,6,opt,name=years,proto3" json:"years,omitempty"`
	Rounds   []int64 `protobuf:"varint,7,rep,packed,name=rounds,proto3" json:"rounds,omitempty"`
	Desc     string  `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{6}
}

func (x *Profile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Profile) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Profile) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Profile) GetGross() int64 {
	if x != nil {
		return x.Gross
	}
	return 0
}

func (x *Profile) GetYears() int64 {
	if x != nil {
		return x.Years
	}
	return 0
}

func (x *Profile) GetRounds() []int64 {
	if x != nil {
		return x.Rounds
	}
	return nil
}

func (x *Profile) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type RoundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round *Round `protobuf:"bytes,1,opt,name=round,proto3" json:"round,omitempty"`
	Place *Place `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	Join  *Join  `protobuf:"bytes,3,opt,name=join,proto3" json:"join,omitempty"`
}

func (x *RoundRequest) Reset() {
	*x = RoundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundRequest) ProtoMessage() {}

func (x *RoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundRequest.ProtoReflect.Descriptor instead.
func (*RoundRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{7}
}

func (x *RoundRequest) GetRound() *Round {
	if x != nil {
		return x.Round
	}
	return nil
}

func (x *RoundRequest) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

func (x *RoundRequest) GetJoin() *Join {
	if x != nil {
		return x.Join
	}
	return nil
}

type RoundReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round *Round `protobuf:"bytes,1,opt,name=round,proto3" json:"round,omitempty"`
	Place *Place `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	Join  *Join  `protobuf:"bytes,3,opt,name=join,proto3" json:"join,omitempty"`
}

func (x *RoundReply) Reset() {
	*x = RoundReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundReply) ProtoMessage() {}

func (x *RoundReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundReply.ProtoReflect.Descriptor instead.
func (*RoundReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{8}
}

func (x *RoundReply) GetRound() *Round {
	if x != nil {
		return x.Round
	}
	return nil
}

func (x *RoundReply) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

func (x *RoundReply) GetJoin() *Join {
	if x != nil {
		return x.Join
	}
	return nil
}

type Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Host  int64 `protobuf:"varint,2,opt,name=host,proto3" json:"host,omitempty"`
	Time  int64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Price int64 `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	// type 으로 상황별 구분해서 사용 ex ) 0 : 필드 18홀, 1 : 필드 9홀, 2 : 스크린 9홀 ...
	TypePlay              int64  `protobuf:"varint,5,opt,name=type_play,json=typePlay,proto3" json:"type_play,omitempty"`
	TypeAge               int64  `protobuf:"varint,6,opt,name=type_age,json=typeAge,proto3" json:"type_age,omitempty"`
	TypeSex               int64  `protobuf:"varint,7,opt,name=type_sex,json=typeSex,proto3" json:"type_sex,omitempty"`
	TypeScoreOfGross      int64  `protobuf:"varint,8,opt,name=type_score_of_gross,json=typeScoreOfGross,proto3" json:"type_score_of_gross,omitempty"`
	TypeExperienceOfYears int64  `protobuf:"varint,9,opt,name=type_experience_of_years,json=typeExperienceOfYears,proto3" json:"type_experience_of_years,omitempty"`
	PlaceId               string `protobuf:"bytes,10,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	PlaceName             string `protobuf:"bytes,11,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	PlaceAddress          string `protobuf:"bytes,12,opt,name=place_address,json=placeAddress,proto3" json:"place_address,omitempty"`
	// 탐색용 키
	ShortAddress string `protobuf:"bytes,13,opt,name=short_address,json=shortAddress,proto3" json:"short_address,omitempty"`
	Lat          string `protobuf:"bytes,14,opt,name=lat,proto3" json:"lat,omitempty"`
	Long         string `protobuf:"bytes,15,opt,name=long,proto3" json:"long,omitempty"`
	Updated      int64  `protobuf:"varint,16,opt,name=updated,proto3" json:"updated,omitempty"`
	PlaceImg     string `protobuf:"bytes,17,opt,name=place_img,json=placeImg,proto3" json:"place_img,omitempty"`
	TypeHole     int64  `protobuf:"varint,18,opt,name=type_hole,json=typeHole,proto3" json:"type_hole,omitempty"`
	PersonFull   int64  `protobuf:"varint,19,opt,name=person_full,json=personFull,proto3" json:"person_full,omitempty"`
	Person       int64  `protobuf:"varint,20,opt,name=person,proto3" json:"person,omitempty"`
}

func (x *Round) Reset() {
	*x = Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round.ProtoReflect.Descriptor instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{9}
}

func (x *Round) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Round) GetHost() int64 {
	if x != nil {
		return x.Host
	}
	return 0
}

func (x *Round) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Round) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Round) GetTypePlay() int64 {
	if x != nil {
		return x.TypePlay
	}
	return 0
}

func (x *Round) GetTypeAge() int64 {
	if x != nil {
		return x.TypeAge
	}
	return 0
}

func (x *Round) GetTypeSex() int64 {
	if x != nil {
		return x.TypeSex
	}
	return 0
}

func (x *Round) GetTypeScoreOfGross() int64 {
	if x != nil {
		return x.TypeScoreOfGross
	}
	return 0
}

func (x *Round) GetTypeExperienceOfYears() int64 {
	if x != nil {
		return x.TypeExperienceOfYears
	}
	return 0
}

func (x *Round) GetPlaceId() string {
	if x != nil {
		return x.PlaceId
	}
	return ""
}

func (x *Round) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

func (x *Round) GetPlaceAddress() string {
	if x != nil {
		return x.PlaceAddress
	}
	return ""
}

func (x *Round) GetShortAddress() string {
	if x != nil {
		return x.ShortAddress
	}
	return ""
}

func (x *Round) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Round) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

func (x *Round) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *Round) GetPlaceImg() string {
	if x != nil {
		return x.PlaceImg
	}
	return ""
}

func (x *Round) GetTypeHole() int64 {
	if x != nil {
		return x.TypeHole
	}
	return 0
}

func (x *Round) GetPersonFull() int64 {
	if x != nil {
		return x.PersonFull
	}
	return 0
}

func (x *Round) GetPerson() int64 {
	if x != nil {
		return x.Person
	}
	return 0
}

type Place struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Lat      string `protobuf:"bytes,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Long     string `protobuf:"bytes,5,opt,name=long,proto3" json:"long,omitempty"`
	Photo    string `protobuf:"bytes,6,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *Place) Reset() {
	*x = Place{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Place) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Place) ProtoMessage() {}

func (x *Place) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Place.ProtoReflect.Descriptor instead.
func (*Place) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{10}
}

func (x *Place) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Place) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Place) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Place) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Place) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

func (x *Place) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

type Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // roundID
	UserId int64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ids    []int64 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *Join) Reset() {
	*x = Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{11}
}

func (x *Join) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Join) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Join) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ids     []int64  `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Reviews []string `protobuf:"bytes,3,rep,name=reviews,proto3" json:"reviews,omitempty"`
	Updated int64    `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *Review) Reset() {
	*x = Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{12}
}

func (x *Review) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Review) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *Review) GetReviews() []string {
	if x != nil {
		return x.Reviews
	}
	return nil
}

func (x *Review) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type FilterdRoundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInit                bool  `protobuf:"varint,1,opt,name=is_init,json=isInit,proto3" json:"is_init,omitempty"`
	TimeMin               int64 `protobuf:"varint,2,opt,name=time_min,json=timeMin,proto3" json:"time_min,omitempty"`
	TimeMax               int64 `protobuf:"varint,3,opt,name=time_max,json=timeMax,proto3" json:"time_max,omitempty"`
	Page                  int64 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	TypePlay              int64 `protobuf:"varint,5,opt,name=type_play,json=typePlay,proto3" json:"type_play,omitempty"`
	TypeAge               int64 `protobuf:"varint,6,opt,name=type_age,json=typeAge,proto3" json:"type_age,omitempty"`
	TypeSex               int64 `protobuf:"varint,7,opt,name=type_sex,json=typeSex,proto3" json:"type_sex,omitempty"`
	TypeScoreOfGross      int64 `protobuf:"varint,8,opt,name=type_score_of_gross,json=typeScoreOfGross,proto3" json:"type_score_of_gross,omitempty"`
	TypeExperienceOfYears int64 `protobuf:"varint,9,opt,name=type_experience_of_years,json=typeExperienceOfYears,proto3" json:"type_experience_of_years,omitempty"`
}

func (x *FilterdRoundsRequest) Reset() {
	*x = FilterdRoundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterdRoundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterdRoundsRequest) ProtoMessage() {}

func (x *FilterdRoundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterdRoundsRequest.ProtoReflect.Descriptor instead.
func (*FilterdRoundsRequest) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{13}
}

func (x *FilterdRoundsRequest) GetIsInit() bool {
	if x != nil {
		return x.IsInit
	}
	return false
}

func (x *FilterdRoundsRequest) GetTimeMin() int64 {
	if x != nil {
		return x.TimeMin
	}
	return 0
}

func (x *FilterdRoundsRequest) GetTimeMax() int64 {
	if x != nil {
		return x.TimeMax
	}
	return 0
}

func (x *FilterdRoundsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterdRoundsRequest) GetTypePlay() int64 {
	if x != nil {
		return x.TypePlay
	}
	return 0
}

func (x *FilterdRoundsRequest) GetTypeAge() int64 {
	if x != nil {
		return x.TypeAge
	}
	return 0
}

func (x *FilterdRoundsRequest) GetTypeSex() int64 {
	if x != nil {
		return x.TypeSex
	}
	return 0
}

func (x *FilterdRoundsRequest) GetTypeScoreOfGross() int64 {
	if x != nil {
		return x.TypeScoreOfGross
	}
	return 0
}

func (x *FilterdRoundsRequest) GetTypeExperienceOfYears() int64 {
	if x != nil {
		return x.TypeExperienceOfYears
	}
	return 0
}

type FilterdRoundsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds []*Round `protobuf:"bytes,1,rep,name=Rounds,proto3" json:"Rounds,omitempty"`
}

func (x *FilterdRoundsReply) Reset() {
	*x = FilterdRoundsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_haru_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterdRoundsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterdRoundsReply) ProtoMessage() {}

func (x *FilterdRoundsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_haru_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterdRoundsReply.ProtoReflect.Descriptor instead.
func (*FilterdRoundsReply) Descriptor() ([]byte, []int) {
	return file_proto_haru_proto_rawDescGZIP(), []int{14}
}

func (x *FilterdRoundsReply) GetRounds() []*Round {
	if x != nil {
		return x.Rounds
	}
	return nil
}

var File_proto_haru_proto protoreflect.FileDescriptor

var file_proto_haru_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x68, 0x61, 0x72, 0x75, 0x22, 0x4f, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4d, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x39, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x61,
	0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x0b,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6a,
	0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x61, 0x72, 0x75,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68,
	0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1e, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x69,
	0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x79, 0x65, 0x61, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x74, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6a,
	0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x61, 0x72, 0x75,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x22, 0x72, 0x0a, 0x0a, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x61,
	0x72, 0x75, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x68, 0x61, 0x72, 0x75, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x22,
	0xc7, 0x04, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x41, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x67, 0x72, 0x6f, 0x73,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x79, 0x70, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4f, 0x66, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x79, 0x70,
	0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x59, 0x65, 0x61,
	0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x6d, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x49, 0x6d, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x48, 0x6f, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x46, 0x75, 0x6c,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x05, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22,
	0x41, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x5e, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x22, 0xb4, 0x02, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x64, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x41, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73,
	0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x78, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x6f, 0x66, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x74, 0x79, 0x70, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x66, 0x47, 0x72, 0x6f, 0x73, 0x73,
	0x12, 0x37, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x74, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x4f, 0x66, 0x59, 0x65, 0x61, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x12, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x23, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x32, 0xdf, 0x03, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x31, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x68,
	0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x68, 0x61, 0x72, 0x75,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x68, 0x61,
	0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x12, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x2e, 0x68, 0x61,
	0x72, 0x75, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x11, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x61, 0x72, 0x75, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x6a, 0x69, 0x6e, 0x2d, 0x6b, 0x72, 0x2f, 0x68, 0x61,
	0x72, 0x75, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_haru_proto_rawDescOnce sync.Once
	file_proto_haru_proto_rawDescData = file_proto_haru_proto_rawDesc
)

func file_proto_haru_proto_rawDescGZIP() []byte {
	file_proto_haru_proto_rawDescOnce.Do(func() {
		file_proto_haru_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_haru_proto_rawDescData)
	})
	return file_proto_haru_proto_rawDescData
}

var file_proto_haru_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_haru_proto_goTypes = []interface{}{
	(*AccountRequest)(nil),       // 0: haru.AccountRequest
	(*AccountReply)(nil),         // 1: haru.AccountReply
	(*ProfileRequest)(nil),       // 2: haru.ProfileRequest
	(*ProfileReply)(nil),         // 3: haru.ProfileReply
	(*JoinRequest)(nil),          // 4: haru.JoinRequest
	(*JoinReply)(nil),            // 5: haru.JoinReply
	(*Profile)(nil),              // 6: haru.Profile
	(*RoundRequest)(nil),         // 7: haru.RoundRequest
	(*RoundReply)(nil),           // 8: haru.RoundReply
	(*Round)(nil),                // 9: haru.Round
	(*Place)(nil),                // 10: haru.Place
	(*Join)(nil),                 // 11: haru.Join
	(*Review)(nil),               // 12: haru.Review
	(*FilterdRoundsRequest)(nil), // 13: haru.FilterdRoundsRequest
	(*FilterdRoundsReply)(nil),   // 14: haru.FilterdRoundsReply
}
var file_proto_haru_proto_depIdxs = []int32{
	6,  // 0: haru.ProfileRequest.profile:type_name -> haru.Profile
	6,  // 1: haru.ProfileReply.profile:type_name -> haru.Profile
	11, // 2: haru.JoinRequest.join:type_name -> haru.Join
	6,  // 3: haru.JoinRequest.profile:type_name -> haru.Profile
	11, // 4: haru.JoinReply.join:type_name -> haru.Join
	9,  // 5: haru.RoundRequest.round:type_name -> haru.Round
	10, // 6: haru.RoundRequest.place:type_name -> haru.Place
	11, // 7: haru.RoundRequest.join:type_name -> haru.Join
	9,  // 8: haru.RoundReply.round:type_name -> haru.Round
	10, // 9: haru.RoundReply.place:type_name -> haru.Place
	11, // 10: haru.RoundReply.join:type_name -> haru.Join
	9,  // 11: haru.FilterdRoundsReply.Rounds:type_name -> haru.Round
	0,  // 12: haru.version1.CreateAccount:input_type -> haru.AccountRequest
	2,  // 13: haru.version1.GetProfile:input_type -> haru.ProfileRequest
	2,  // 14: haru.version1.UpdateProfile:input_type -> haru.ProfileRequest
	7,  // 15: haru.version1.CreateRound:input_type -> haru.RoundRequest
	7,  // 16: haru.version1.UpdateRound:input_type -> haru.RoundRequest
	7,  // 17: haru.version1.GetRound:input_type -> haru.RoundRequest
	13, // 18: haru.version1.GetFilterdRounds:input_type -> haru.FilterdRoundsRequest
	4,  // 19: haru.version1.JoinRound:input_type -> haru.JoinRequest
	1,  // 20: haru.version1.CreateAccount:output_type -> haru.AccountReply
	3,  // 21: haru.version1.GetProfile:output_type -> haru.ProfileReply
	3,  // 22: haru.version1.UpdateProfile:output_type -> haru.ProfileReply
	8,  // 23: haru.version1.CreateRound:output_type -> haru.RoundReply
	8,  // 24: haru.version1.UpdateRound:output_type -> haru.RoundReply
	8,  // 25: haru.version1.GetRound:output_type -> haru.RoundReply
	14, // 26: haru.version1.GetFilterdRounds:output_type -> haru.FilterdRoundsReply
	5,  // 27: haru.version1.JoinRound:output_type -> haru.JoinReply
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_haru_proto_init() }
func file_proto_haru_proto_init() {
	if File_proto_haru_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_haru_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Place); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterdRoundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_haru_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterdRoundsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_haru_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_haru_proto_goTypes,
		DependencyIndexes: file_proto_haru_proto_depIdxs,
		MessageInfos:      file_proto_haru_proto_msgTypes,
	}.Build()
	File_proto_haru_proto = out.File
	file_proto_haru_proto_rawDesc = nil
	file_proto_haru_proto_goTypes = nil
	file_proto_haru_proto_depIdxs = nil
}
