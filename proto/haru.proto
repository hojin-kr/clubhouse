// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/hojin-kr/haru/cmd/proto";
// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";

package haru;

// Service definition.
service version1 {
  rpc CreateAccount (AccountRequest) returns (AccountReply) {}
  rpc GetProfile (ProfileRequest) returns (ProfileReply) {}
  rpc UpdateProfile (ProfileRequest) returns (ProfileReply) {}
  rpc CreateRound (RoundRequest) returns (RoundReply) {}
  rpc UpdateRound (RoundRequest) returns (RoundReply) {}
  rpc GetRound (RoundRequest) returns (RoundReply) {}
  rpc GetFilterdRounds (FilterdRoundsRequest) returns (FilterdRoundsReply) {}
  rpc JoinRound (JoinRequest) returns (JoinReply) {}
}

message AccountRequest {
  int64 id = 1;
  int64 register_timestamp = 2;
}

message AccountReply {
  int64 id = 1;
  int64 register_timestamp = 2;
}

message ProfileRequest {
  Profile profile = 1;
}

message ProfileReply {
  Profile profile = 1;
}

message JoinRequest {
  Join join = 1;
  Profile profile = 2;
}

message JoinReply {
  Join join = 1;
}

message Profile {
  int64 id = 1;
  string nickname = 2;
  int64 age = 3;
  int64 sex = 4;
  int64 gross = 5;
  int64 years = 6;
  repeated int64 rounds = 7;
  string desc = 8;
}

message RoundRequest {
  Round round = 1;
  Place place = 2;
  Join join = 3;
}

message RoundReply {
  Round round = 1;
  Place place = 2;
  Join join = 3;
}

message Round {
  int64 id = 1;
  int64 host = 2;
  int64 time = 3;
  int64 price = 4;
  // type 으로 상황별 구분해서 사용 ex ) 0 : 필드 18홀, 1 : 필드 9홀, 2 : 스크린 9홀 ...
  int64 type_play = 5;
  int64 type_age = 6;
  int64 type_sex = 7;
  int64 type_score_of_gross = 8;
  int64 type_experience_of_years = 9;
  string place_id = 10;
  string place_name = 11;
  string place_address = 12;
  // 탐색용 키
  string short_address = 13;
  string lat = 14;
  string long = 15;
  int64 updated = 16;
  string place_img = 17;
  int64 type_hole = 18;
  int64 person_full = 19;
  int64 person = 20;
}

message Place {
  int64 id = 1;
  string name = 2;
  string location = 3;
  string lat = 4;
  string long = 5;
  string photo = 6;
}

message Join {
  int64 id = 1; // roundID
  int64 user_id = 2;
  repeated int64 ids = 3;
}

message Review {
  int64 id = 1;
  repeated int64 ids = 2;
  repeated string reviews = 3;
  int64 updated = 4;
}

message FilterdRoundsRequest {
  bool is_init =1;
  int64 time_min = 2;
  int64 time_max = 3;
  int64 page = 4;
  int64 type_play = 5;
  int64 type_age = 6;
  int64 type_sex = 7;
  int64 type_score_of_gross = 8;
  int64 type_experience_of_years = 9;
}

message FilterdRoundsReply {
  repeated Round Rounds = 1;
}