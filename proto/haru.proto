// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/hojin-kr/haru/cmd/proto";
// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";

package haru;

// Service definition.
service version1 {
  // Create Account
  rpc CreateAccount (AccountRequest) returns (AccountReply) {}
  // GetProfile
  rpc GetProfile (ProfileRequest) returns (ProfileReply) {}
  // UpdateProfile
  rpc UpdateProfile (ProfileRequest) returns (ProfileReply) {}
  // GetPoint
  rpc GetPoint (PointRequest) returns (PointReply) {}
  // IncrPoint
  rpc IncrPoint (PointRequest) returns (PointReply) {}
  // GetPlaceByID
  rpc GetPlaceByID (PlaceRequest) returns (PlaceReply) {}
  // GetPlaceByInput
  rpc GetPlaceByInput (PlaceRequest) returns (PlaceReply) {}
  // UpdatePlaceProfile
  rpc UpdatePlaceProfile (PlaceRequest) returns (PlaceProfileReply) {}
  // GetPlaceProfile
  rpc GetPlaceProfile (PlaceRequest) returns (PlaceProfileReply) {}
  // getNearbySearch
  rpc GetNearbySearch (PlaceRequest) returns (PlaceReplyList) {}
}

message AccountRequest {
  int64 id = 1;
  int64 register_timestamp = 2;
}

message AccountReply {
  int64 id = 1;
  int64 register_timestamp = 2;
}

message ProfileRequest {
  int64 id = 1;
  string nickname = 2;
  repeated string likes = 3;
}

message PlaceRequest {
  string input = 1;
  string language = 2;
  string place_id = 3;
  bool is_visit = 4;
  bool is_like = 5;
  string location = 6;
  uint64 radius = 7;
  string keyword = 8;
  string pageToken = 9;
  bool OpenNow = 10;
}

message ProfileReply {
  int64 id = 1;
  string nickname = 2;
  repeated string likes = 3;
}

message PointRequest {
  int64 id = 1;
  int64 point = 2;
}
// 서버 단독 Place 정보들 모델로 정의 포인트, 방문정보등
message PointReply {
  int64 id = 1;
  int64 point = 2;
  int64 count = 3;
}

message PlaceReply {
  repeated AddressComponent address_components = 1;
  string formatted_address = 2;
  string adr_address = 3;
  string formatted_phone_number = 4;
  string international_phone_number = 5;
  AddressGeometry geometry = 6;
  string name = 7;
  string icon = 8;
  string place_id = 9;
  float rating = 10;
  int64 user_ratings_total = 11;
  repeated string Types = 12;
  OpeningHours opening_hours = 13;
  repeated Photo photos = 14;
  int64 price_level = 15;
  string vicinity = 16;
  bool permanently_closed = 17;
  string business_status = 18;
  repeated PlaceReview reviews = 19;
  int64 utc_offset = 20;
  string website = 21;
  string url = 22;
  repeated string html_attributions = 23;
}

message AddressComponent {
  string long_name = 1;
  string short_name = 2;
  repeated string types = 3;
}

message AddressGeometry {
  LatLng location = 1;
  string location_type = 2;
  LatLngBounds bounds = 3;
  LatLngBounds viewport = 4;
  repeated string types = 5;
}

message LatLng {
  float lat = 1;
  float lng = 2;
}

message LatLngBounds {
  LatLng northeast = 1;
  LatLng southwest = 2;
}
  
message OpeningHoursOpenClose {
  int64 day = 1;
  string time = 2;
}

message Photo {
  string photo_reference = 1;
  int64 height = 2;
  int64 width = 3;
  repeated string html_attributions = 4;
}

message PlaceReview {
  repeated PlaceReviewAspect aspects = 1;
  string author_name = 2;
  string author_url = 3;
  string profile_photo_url = 4;
  string language = 5;
  int64 rating = 6;
  string text = 7;
  int64 time = 8;
}

message PlaceReviewAspect {
  int64 rating = 1;
  string type = 2;
}

message OpeningHours {
  message OpeningHoursPeriod {
    OpeningHoursOpenClose open  = 1;
    OpeningHoursOpenClose close = 2;
  }
  message OpeningHoursOpenClose {
    int64 day = 1;
    string time = 2;
  }
  bool open_now = 1;
  repeated OpeningHoursPeriod periods = 2;
  repeated string weekday_text = 3;
  bool permanently_closed = 4;
}

message PlaceProfileReply {
  message Populartimes {
    int64 weekday = 1;
    int64 time = 2;
    int64 count = 3;
  }
  string place_id = 1;
  repeated Populartimes popular_times = 2;
  int64 likes = 3;
}

message PlaceReplyList {
  repeated PlaceReply place_reply_list = 1;
  string next_page_token = 2;
}